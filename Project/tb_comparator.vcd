$date
	Thu Sep 28 14:36:13 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_comparator $end
$var wire 1 ! Less $end
$var wire 1 " Greater $end
$var wire 1 # Equal $end
$var reg 4 $ A [3:0] $end
$var reg 4 % B [3:0] $end
$scope module DUT $end
$var wire 4 & A [3:0] $end
$var wire 4 ' B [3:0] $end
$var wire 1 # Equal $end
$var wire 1 " Greater $end
$var wire 1 ! Less $end
$var wire 1 ( b0c $end
$var wire 1 ) b1c $end
$var wire 1 * b2c $end
$var wire 1 + b3c $end
$var wire 1 , eq0 $end
$var wire 1 - eq1 $end
$var wire 1 . eq2 $end
$var wire 1 / eq3 $end
$var wire 1 0 gt0 $end
$var wire 1 1 gt1 $end
$var wire 1 2 gt2 $end
$var wire 1 3 gt3 $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
13
02
01
00
0/
0.
1-
1,
1+
0*
1)
0(
b101 '
b1001 &
b101 %
b1001 $
0#
1"
0!
$end
#10
0"
03
1#
1/
0+
1(
1.
b1100 %
b1100 '
b1100 $
b1100 &
#20
1!
0#
0.
0,
1*
0(
0/
b1001 %
b1001 '
b100 $
b100 &
#30
0!
1"
12
1/
1+
1,
b1 %
b1 '
b101 $
b101 &
#40
1!
0"
0*
0)
0,
02
b111 %
b111 '
b10 $
b10 &
#50
0!
1#
1.
1*
1,
b11 %
b11 '
b11 $
b11 &
#60
0#
1"
0/
0-
13
b1001 $
b1001 &
#70
1!
0"
0+
1)
1(
0.
03
b1000 %
b1000 '
b110 $
b110 &
#80
0!
1"
13
1+
0,
b0 %
b0 '
b1111 $
b1111 &
#90
1!
0"
0+
0*
0)
0(
03
b1111 %
b1111 '
b0 $
b0 &
#100
