$date
	Tue Oct 24 12:02:47 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_ALU $end
$var wire 4 ! SumSub [3:0] $end
$var wire 4 " SumAdd [3:0] $end
$var wire 4 # OutAnd [3:0] $end
$var wire 1 $ Less $end
$var wire 1 % Greater $end
$var wire 1 & Equal $end
$var wire 1 ' CarrySub $end
$var wire 1 ( CarryAdd $end
$var reg 4 ) A [3:0] $end
$var reg 4 * B [3:0] $end
$var reg 2 + S [1:0] $end
$scope module DUT $end
$var wire 4 , A [3:0] $end
$var wire 4 - B [3:0] $end
$var wire 2 . S [1:0] $end
$var wire 4 / SumSub [3:0] $end
$var wire 4 0 SumAdd [3:0] $end
$var wire 4 1 OutAnd [3:0] $end
$var wire 1 $ Less $end
$var wire 1 % Greater $end
$var wire 1 & Equal $end
$var wire 4 2 D [3:0] $end
$var wire 1 ' CarrySub $end
$var wire 1 ( CarryAdd $end
$var wire 4 3 BinSub [3:0] $end
$var wire 4 4 BinComp [3:0] $end
$var wire 4 5 BinAnd [3:0] $end
$var wire 4 6 BinAdd [3:0] $end
$var wire 4 7 AinSub [3:0] $end
$var wire 4 8 AinComp [3:0] $end
$var wire 4 9 AinAnd [3:0] $end
$var wire 4 : AinAdd [3:0] $end
$scope module A1 $end
$var wire 4 ; Out [3:0] $end
$var wire 4 < B [3:0] $end
$var wire 4 = A [3:0] $end
$upscope $end
$scope module D1 $end
$var wire 2 > S [1:0] $end
$var wire 1 ? Sc0 $end
$var wire 1 @ Sc1 $end
$var wire 4 A D [3:0] $end
$upscope $end
$scope module adder $end
$var wire 1 B B0 $end
$var wire 1 C B1 $end
$var wire 1 D B2 $end
$var wire 1 E B3 $end
$var wire 1 F M $end
$var wire 4 G Sum [3:0] $end
$var wire 1 H Cout2 $end
$var wire 1 I Cout1 $end
$var wire 1 J Cout0 $end
$var wire 1 ( Carry $end
$var wire 4 K B [3:0] $end
$var wire 4 L A [3:0] $end
$scope module S0 $end
$var wire 1 M A $end
$var wire 1 B B $end
$var wire 1 N C1out $end
$var wire 1 O C2out $end
$var wire 1 F Cin $end
$var wire 1 J Cout $end
$var wire 1 P S $end
$var wire 1 Q S1out $end
$upscope $end
$scope module S1 $end
$var wire 1 R A $end
$var wire 1 C B $end
$var wire 1 S C1out $end
$var wire 1 T C2out $end
$var wire 1 J Cin $end
$var wire 1 I Cout $end
$var wire 1 U S $end
$var wire 1 V S1out $end
$upscope $end
$scope module S2 $end
$var wire 1 W A $end
$var wire 1 D B $end
$var wire 1 X C1out $end
$var wire 1 Y C2out $end
$var wire 1 I Cin $end
$var wire 1 H Cout $end
$var wire 1 Z S $end
$var wire 1 [ S1out $end
$upscope $end
$scope module S3 $end
$var wire 1 \ A $end
$var wire 1 E B $end
$var wire 1 ] C1out $end
$var wire 1 ^ C2out $end
$var wire 1 H Cin $end
$var wire 1 ( Cout $end
$var wire 1 _ S $end
$var wire 1 ` S1out $end
$upscope $end
$upscope $end
$scope module comp $end
$var wire 1 a En $end
$var wire 1 & Equal $end
$var wire 1 % Greater $end
$var wire 1 $ Less $end
$var wire 1 b b0c $end
$var wire 1 c b1c $end
$var wire 1 d b2c $end
$var wire 1 e b3c $end
$var wire 1 f eq0 $end
$var wire 1 g eq1 $end
$var wire 1 h eq2 $end
$var wire 1 i eq3 $end
$var wire 1 j gt0 $end
$var wire 1 k gt1 $end
$var wire 1 l gt2 $end
$var wire 1 m gt3 $end
$var wire 1 n tempLess $end
$var wire 4 o B [3:0] $end
$var wire 4 p A [3:0] $end
$upscope $end
$scope module eAdd $end
$var wire 4 q A [3:0] $end
$var wire 4 r B [3:0] $end
$var wire 1 s Ein $end
$var wire 4 t Bout [3:0] $end
$var wire 4 u Aout [3:0] $end
$upscope $end
$scope module eAnd $end
$var wire 4 v A [3:0] $end
$var wire 4 w B [3:0] $end
$var wire 1 x Ein $end
$var wire 4 y Bout [3:0] $end
$var wire 4 z Aout [3:0] $end
$upscope $end
$scope module eComp $end
$var wire 4 { A [3:0] $end
$var wire 4 | B [3:0] $end
$var wire 1 } Ein $end
$var wire 4 ~ Bout [3:0] $end
$var wire 4 !" Aout [3:0] $end
$upscope $end
$scope module eSub $end
$var wire 4 "" A [3:0] $end
$var wire 4 #" B [3:0] $end
$var wire 1 $" Ein $end
$var wire 4 %" Bout [3:0] $end
$var wire 4 &" Aout [3:0] $end
$upscope $end
$scope module subtractor $end
$var wire 4 '" A [3:0] $end
$var wire 4 (" B [3:0] $end
$var wire 1 )" B0 $end
$var wire 1 *" B1 $end
$var wire 1 +" B2 $end
$var wire 1 ," B3 $end
$var wire 1 -" M $end
$var wire 4 ." Sum [3:0] $end
$var wire 1 /" Cout2 $end
$var wire 1 0" Cout1 $end
$var wire 1 1" Cout0 $end
$var wire 1 ' Carry $end
$scope module S0 $end
$var wire 1 2" A $end
$var wire 1 )" B $end
$var wire 1 3" C1out $end
$var wire 1 4" C2out $end
$var wire 1 -" Cin $end
$var wire 1 1" Cout $end
$var wire 1 5" S $end
$var wire 1 6" S1out $end
$upscope $end
$scope module S1 $end
$var wire 1 7" A $end
$var wire 1 *" B $end
$var wire 1 8" C1out $end
$var wire 1 9" C2out $end
$var wire 1 1" Cin $end
$var wire 1 0" Cout $end
$var wire 1 :" S $end
$var wire 1 ;" S1out $end
$upscope $end
$scope module S2 $end
$var wire 1 <" A $end
$var wire 1 +" B $end
$var wire 1 =" C1out $end
$var wire 1 >" C2out $end
$var wire 1 0" Cin $end
$var wire 1 /" Cout $end
$var wire 1 ?" S $end
$var wire 1 @" S1out $end
$upscope $end
$scope module S3 $end
$var wire 1 A" A $end
$var wire 1 ," B $end
$var wire 1 B" C1out $end
$var wire 1 C" C2out $end
$var wire 1 /" Cin $end
$var wire 1 ' Cout $end
$var wire 1 D" S $end
$var wire 1 E" S1out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0E"
0D"
0C"
1B"
1A"
0@"
1?"
0>"
0="
0<"
1;"
0:"
19"
08"
07"
16"
05"
14"
03"
12"
11"
10"
0/"
b100 ."
1-"
1,"
0+"
1*"
0)"
b101 ("
b1001 '"
b1001 &"
b101 %"
1$"
b101 #"
b1001 ""
b0 !"
b0 ~
0}
b101 |
b1001 {
b0 z
b0 y
0x
b101 w
b1001 v
b0 u
b0 t
0s
b101 r
b1001 q
b0 p
b0 o
1n
0m
0l
0k
0j
1i
1h
1g
1f
1e
1d
1c
1b
0a
1`
0_
1^
0]
0\
1[
0Z
1Y
0X
0W
1V
0U
1T
0S
0R
1Q
0P
1O
0N
0M
b0 L
b0 K
1J
1I
1H
b0 G
1F
1E
1D
1C
1B
b10 A
1@
0?
b1 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b1001 7
b0 6
b0 5
b0 4
b101 3
b10 2
b0 1
b0 0
b100 /
b1 .
b101 -
b1001 ,
b1 +
b101 *
b1001 )
1(
1'
0&
0%
0$
b0 #
b0 "
b100 !
$end
#10
1]
1X
00"
1H
1(
0I
0'
0D"
1\
1W
09"
0Z
0Y
1_
0^
0T
0B"
0,"
0/"
b1100 :
b1100 L
b1100 u
b1100 6
b1100 K
b1100 t
0;"
01"
0[
0V
0`
0Q
0J
0A"
b0 !
b0 /
b0 ."
0?"
0>"
1s
0+"
0*"
04"
1D
0C
1E
0B
b1000 "
b1000 0
b1000 G
0P
0O
0@"
06"
0-"
0F
0$"
0<"
02"
1?
b1 2
b1 A
b0 3
b0 %"
b0 ("
b0 7
b0 &"
b0 '"
b0 +
b0 .
b0 >
b1100 *
b1100 -
b1100 r
b1100 w
b1100 |
b1100 #"
b1100 )
b1100 ,
b1100 q
b1100 v
b1100 {
b1100 ""
#20
1Z
0H
1P
1[
0X
1Q
b1101 "
b1101 0
b1101 G
1_
0^
0(
0D
1B
1`
0]
0\
b1001 6
b1001 K
b1001 t
b100 :
b100 L
b100 u
b1001 *
b1001 -
b1001 r
b1001 w
b1001 |
b1001 #"
b100 )
b100 ,
b100 q
b100 v
b100 {
b100 ""
#30
0_
1U
0`
b110 "
b110 0
b110 G
0P
1J
0E
0Q
1N
1M
b1 6
b1 K
b1 t
b101 :
b101 L
b101 u
b1 *
b1 -
b1 r
b1 w
b1 |
b1 #"
b101 )
b101 ,
b101 q
b101 v
b101 {
b101 ""
#40
1_
1H
1Y
0U
1I
1S
0Z
b1001 "
b1001 0
b1001 G
1P
0J
1D
1C
1[
0V
1Q
0N
0W
1R
0M
b111 6
b111 K
b111 t
b10 :
b10 L
b10 u
b111 *
b111 -
b111 r
b111 w
b111 |
b111 #"
b10 )
b10 ,
b10 q
b10 v
b10 {
b10 ""
#50
0?"
1H
1'
0Z
1Y
0:"
1C"
1I
14"
1/"
19"
1(
0U
1;"
16"
0R
1>"
10"
0D"
11"
0_
1^
b0 "
b0 0
b0 G
0P
1O
1T
1@"
08"
1E"
03"
1V
0S
1`
17"
12"
1J
0s
1+"
0*"
1,"
0)"
b0 !
b0 /
b0 ."
05"
1C
1E
1B
b11 7
b11 &"
b11 '"
b11 3
b11 %"
b11 ("
1Q
0N
1-"
1F
1$"
0M
0?
b10 2
b10 A
b0 6
b0 K
b0 t
b0 :
b0 L
b0 u
b1 +
b1 .
b1 >
b11 *
b11 -
b11 r
b11 w
b11 |
b11 #"
b11 )
b11 ,
b11 q
b11 v
b11 {
b11 ""
#60
0/"
1?"
0>"
00"
0D"
0C"
b110 !
b110 /
b110 ."
1:"
09"
0E"
1B"
0;"
1A"
07"
b1001 7
b1001 &"
b1001 '"
b1001 )
b1001 ,
b1001 q
b1001 v
b1001 {
b1001 ""
#70
1U
0H
0(
0I
1W
1R
1Z
0Y
1_
0^
0T
0,"
00"
b110 :
b110 L
b110 u
b1000 6
b1000 K
b1000 t
01"
1[
1V
1`
0Q
0J
0C"
0'
0?"
0/"
b0 !
b0 /
b0 ."
0:"
09"
1s
0+"
04"
0D
0C
1E
0B
b1110 "
b1110 0
b1110 G
0P
0O
0E"
0B"
0@"
0="
0;"
06"
0-"
0F
0$"
0A"
0<"
07"
02"
1?
b1 2
b1 A
b0 3
b0 %"
b0 ("
b0 7
b0 &"
b0 '"
b0 +
b0 .
b0 >
b1000 *
b1000 -
b1000 r
b1000 w
b1000 |
b1000 #"
b110 )
b110 ,
b110 q
b110 v
b110 {
b110 ""
#80
1^
0Z
1Y
0U
1T
1D"
1?"
1:"
0W
0R
1/"
10"
1'
11"
1H
1I
0P
1="
18"
1B"
13"
1[
0X
1V
0S
0N
1J
1A"
1<"
17"
12"
b0 "
b0 0
b0 G
0_
1(
0s
1+"
1*"
1,"
1)"
b1111 !
b1111 /
b1111 ."
15"
1D
1C
1B
1O
b1111 7
b1111 &"
b1111 '"
1`
0]
1Q
1-"
1F
1$"
0\
0M
0?
b10 2
b10 A
b0 6
b0 K
b0 t
b0 :
b0 L
b0 u
b1 +
b1 .
b1 >
b0 *
b0 -
b0 r
b0 w
b0 |
b0 #"
b1111 )
b1111 ,
b1111 q
b1111 v
b1111 {
b1111 ""
#90
1U
0D"
0?"
0:"
b0 !
b0 /
b0 ."
05"
0H
0(
0I
1Z
0Y
1_
0^
0T
0,"
0+"
0*"
0)"
b1111 6
b1111 K
b1111 t
1[
1V
1`
1Q
0J
0'
0/"
00"
01"
1s
1D
1C
1E
1B
b1111 "
b1111 0
b1111 G
1P
0O
0E"
0B"
0@"
0="
0;"
08"
06"
03"
0-"
0F
0$"
0A"
0<"
07"
02"
1?
b1 2
b1 A
b0 3
b0 %"
b0 ("
b0 7
b0 &"
b0 '"
b0 +
b0 .
b0 >
b1111 *
b1111 -
b1111 r
b1111 w
b1111 |
b1111 #"
b0 )
b0 ,
b0 q
b0 v
b0 {
b0 ""
#100
1^
1H
1Y
0:"
14"
10"
16"
1I
1?"
19"
1'
11"
0Z
0P
1O
0U
1T
0@"
1;"
1B"
03"
1[
1A"
12"
b0 "
b0 0
b0 G
0_
1(
1J
0s
0+"
1*"
1,"
0)"
b100 !
b100 /
b100 ."
05"
1D
1B
b1001 7
b1001 &"
b1001 '"
b101 3
b101 %"
b101 ("
1`
0]
1Q
0N
1-"
1F
1$"
0\
0M
0?
b10 2
b10 A
b0 6
b0 K
b0 t
b0 :
b0 L
b0 u
b1 +
b1 .
b1 >
b101 *
b101 -
b101 r
b101 w
b101 |
b101 #"
b1001 )
b1001 ,
b1001 q
b1001 v
b1001 {
b1001 ""
#110
0n
0e
0d
00"
0H
0(
0I
0'
0D"
1&
09"
0Z
0Y
0_
0^
0T
0B"
0,"
0/"
0$
b1100 8
b1100 p
b1100 !"
b1100 4
b1100 o
b1100 ~
0;"
01"
0[
0V
0`
0Q
0J
0A"
b0 !
b0 /
b0 ."
0?"
0>"
1a
1}
0+"
0*"
04"
0D
0C
0E
0B
b0 "
b0 0
b0 G
0P
0O
0@"
06"
0-"
0F
0$"
0<"
02"
1?
0@
b100 2
b100 A
b0 3
b0 %"
b0 ("
b0 7
b0 &"
b0 '"
b10 +
b10 .
b10 >
b1100 *
b1100 -
b1100 r
b1100 w
b1100 |
b1100 #"
b1100 )
b1100 ,
b1100 q
b1100 v
b1100 {
b1100 ""
#120
1$
1n
0&
1d
0h
0b
0f
0i
b1001 4
b1001 o
b1001 ~
b100 8
b100 p
b100 !"
b1001 *
b1001 -
b1001 r
b1001 w
b1001 |
b1001 #"
b100 )
b100 ,
b100 q
b100 v
b100 {
b100 ""
#130
0$
0n
1%
1l
1e
1i
1f
b1 4
b1 o
b1 ~
b101 8
b101 p
b101 !"
b1 *
b1 -
b1 r
b1 w
b1 |
b1 #"
b101 )
b101 ,
b101 q
b101 v
b101 {
b101 ""
#140
1$
1n
0%
0d
0c
0l
0f
b111 4
b111 o
b111 ~
b10 8
b10 p
b10 !"
b111 *
b111 -
b111 r
b111 w
b111 |
b111 #"
b10 )
b10 ,
b10 q
b10 v
b10 {
b10 ""
#150
0$
0n
1&
1d
1h
1f
b11 4
b11 o
b11 ~
b11 8
b11 p
b11 !"
b11 *
b11 -
b11 r
b11 w
b11 |
b11 #"
b11 )
b11 ,
b11 q
b11 v
b11 {
b11 ""
#160
0&
1%
1m
0i
0g
b1001 8
b1001 p
b1001 !"
b1001 )
b1001 ,
b1001 q
b1001 v
b1001 {
b1001 ""
#170
1$
1n
0%
0e
1c
1b
0m
0h
b1000 4
b1000 o
b1000 ~
b110 8
b110 p
b110 !"
b1000 *
b1000 -
b1000 r
b1000 w
b1000 |
b1000 #"
b110 )
b110 ,
b110 q
b110 v
b110 {
b110 ""
#180
0$
0n
1%
1m
1e
0f
b0 4
b0 o
b0 ~
b1111 8
b1111 p
b1111 !"
b0 *
b0 -
b0 r
b0 w
b0 |
b0 #"
b1111 )
b1111 ,
b1111 q
b1111 v
b1111 {
b1111 ""
#190
1$
1n
0%
0e
0d
0c
0b
0m
b1111 4
b1111 o
b1111 ~
b0 8
b0 p
b0 !"
b1111 *
b1111 -
b1111 r
b1111 w
b1111 |
b1111 #"
b0 )
b0 ,
b0 q
b0 v
b0 {
b0 ""
#200
0$
0n
1%
1m
1e
1c
1g
1f
b101 4
b101 o
b101 ~
b1001 8
b1001 p
b1001 !"
b101 *
b101 -
b101 r
b101 w
b101 |
b101 #"
b1001 )
b1001 ,
b1001 q
b1001 v
b1001 {
b1001 ""
#210
1d
1n
b1100 #
b1100 1
b1100 ;
0%
0m
0a
0}
b1100 9
b1100 =
b1100 z
b1100 5
b1100 <
b1100 y
1e
1i
1b
1h
1x
0?
b1000 2
b1000 A
b0 4
b0 o
b0 ~
b0 8
b0 p
b0 !"
b11 +
b11 .
b11 >
b1100 *
b1100 -
b1100 r
b1100 w
b1100 |
b1100 #"
b1100 )
b1100 ,
b1100 q
b1100 v
b1100 {
b1100 ""
#220
b0 #
b0 1
b0 ;
b1001 5
b1001 <
b1001 y
b100 9
b100 =
b100 z
b1001 *
b1001 -
b1001 r
b1001 w
b1001 |
b1001 #"
b100 )
b100 ,
b100 q
b100 v
b100 {
b100 ""
#230
b1 #
b1 1
b1 ;
b1 5
b1 <
b1 y
b101 9
b101 =
b101 z
b1 *
b1 -
b1 r
b1 w
b1 |
b1 #"
b101 )
b101 ,
b101 q
b101 v
b101 {
b101 ""
#240
b10 #
b10 1
b10 ;
b111 5
b111 <
b111 y
b10 9
b10 =
b10 z
b111 *
b111 -
b111 r
b111 w
b111 |
b111 #"
b10 )
b10 ,
b10 q
b10 v
b10 {
b10 ""
#250
b11 #
b11 1
b11 ;
b11 5
b11 <
b11 y
b11 9
b11 =
b11 z
b11 *
b11 -
b11 r
b11 w
b11 |
b11 #"
b11 )
b11 ,
b11 q
b11 v
b11 {
b11 ""
#260
b1 #
b1 1
b1 ;
b1001 9
b1001 =
b1001 z
b1001 )
b1001 ,
b1001 q
b1001 v
b1001 {
b1001 ""
#270
b0 #
b0 1
b0 ;
b1000 5
b1000 <
b1000 y
b110 9
b110 =
b110 z
b1000 *
b1000 -
b1000 r
b1000 w
b1000 |
b1000 #"
b110 )
b110 ,
b110 q
b110 v
b110 {
b110 ""
#280
b0 5
b0 <
b0 y
b1111 9
b1111 =
b1111 z
b0 *
b0 -
b0 r
b0 w
b0 |
b0 #"
b1111 )
b1111 ,
b1111 q
b1111 v
b1111 {
b1111 ""
#290
b1111 5
b1111 <
b1111 y
b0 9
b0 =
b0 z
b1111 *
b1111 -
b1111 r
b1111 w
b1111 |
b1111 #"
b0 )
b0 ,
b0 q
b0 v
b0 {
b0 ""
#300
